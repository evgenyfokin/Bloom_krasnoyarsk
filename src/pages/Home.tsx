import {useTulips} from "../hooks/tulips.js";
import {useSelector} from "react-redux";
import React from "react";
import {Status} from "../redux/tulips/types";
import { RootState} from "../redux/store";
import {TulipItem} from "../redux/tulips/types";

import {Category, Sort, Skeleton, TulipBlock} from "../components"

const Home: React.FC = () => {
    const searchState = useSelector((state: RootState) => state.filter.sort.searchValue)
    const {status, items} = useSelector((state: RootState) => state.tulips)

    useTulips()

    return (
        <>
            <div className="content__top">
                <Category/>
                <Sort/>
            </div>
            <h2 className="content__title">–í—Å–µ —Ç—é–ª—å–ø–∞–Ω—ã</h2>
            <div className="content-wrapper">
                {status === 'error' && (
                    <div className="content__error-info">
                        <h2>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ üòï</h2>
                        <p>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ</p>
                    </div>
                )}
                <div className="content__items">
                    {status === Status.LOADING
                        ? [...new Array(10)].map((_, i: number) => <Skeleton key={i}/>)
                        : items?.filter(item => item.title.toLowerCase().includes(searchState.toLowerCase())).map(tulip =>
                            <TulipBlock key={tulip.id}{...tulip}/>)
                    }
                </div>
            </div>
        </>
    )
}

export default Home